openapi: 3.0.0
info:
  title: "Attendance Auditor Plus API"
  description: "Plan events, send RSVPs, and audit attendance"
  version: 1.0.0
  contact:
    name: "Attendance Auditor Plus"
    url: "[TODO]"
    email: attendanceauditor@gmail.com
  license: 
    name: "Apache License, version 2.0"
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
- url: "[TODO]/api"
paths:
  /events:
    get:
      summary: "Get a list of events"
      parameters:
      - name: t
        in: query
        description: "Event title. The returned events will match the specified title."
        schema:
          type: string
      - name: l
        in: query
        description: "Event location. The returned events will match the specified location."
        schema:
          type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Events"
        500:
          description: Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    post:
      summary: "Create an event"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
              - $ref: "#/components/schemas/Event"
              required:
              - title
              - datetime
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        400:
          description: "Bad request - missing properties"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: Failure
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /events/{eventId}:
    get:
      summary: "Get a single event"
      parameters:
      - $ref: "#/components/parameters/eventId"
      responses:
        200:
          description: "Success"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
        404:
          description: "Could not find specified event"
          conent:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: "Failure"
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
    put:
      summary: "Update an event"
      parameters:
      - $ref: "#/components/parameters/eventId"
      requestBody:
        content:
          application/json:
            schema:
            - $ref: "#/components/schemas/Event"
      responses:
        200:
          description: Success
          conent:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: "Could not find specified event"
          conent:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        500:
          description: "Failure"
    delete:
      summary: "Delete an event"
      parameters:
      - $ref: "#/components/parameters/eventId"
      responses:
        200:
          description: Success
          conent:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        404:
          description: "Could not find specified event"
          conent:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /events/{eventId}/attendees:
    get:
      summary: "Get "
      parameters:
      - $ref: "#/components/parameters/eventId"
      responses:
    post:
      summary:
      requestBody:
      responses:
  /events/{eventId}/attendees/{userId}:
    put:
      summary:
      parameters:
      requestBody:
      responses:
    delete:
      summary:
      parameters:
      responses:
  /inventory:
    get:
      summary:
      parameters:
      responses:
    post:
      summary:
      requestBody:
      responses:
  /inventory/{itemId}:
    put:
      summary:
      requestBody:
      responses:
    delete:
      summary:
      parameters:
      responses:
components:
  parameters:
    eventId:
      name: eventId
      in: path
      description: "String which uniquely identifies an event."
      schema:
        type: string
    userId:
      name: userId
      in: path
      description: "String which uniquely identifies a user."
      schema:
        type: string
    itemId:
      name: itemId
      in: path
      description: "String which uniquely identifies an item."
      schema:
        type: string
  schemas:
    Attendee:
      title: Attendee
      type: object
      properties:
        userId:
          type: string
          description: "UserID, referencing the users collection."
        didRSVP:
          type: boolean
          description: "Indicates whether the user RSVP'd for the event."
        didAttend:
          type: boolean
          description: "Indicates whether the user attended the event."
    Event:
      title: Event
      type: object
      properties:
        title:
          type: string
          description: "Event tile"
        description:
          type: string
          description: "Event description"
        datetime:
          type: string
          format: date-time
          description: "Event date and time, typically of the format YYYY-MM-DDTHH:MM:SS"
        capacity:
          type: integer
          description: "Non-negative integer indicating the attendee capacity for the event."
        facilitators:
          type: array
          items:
            type: string
            description: "An ID that will refer to some user"
        attendees:
          type: array
          items:
            $ref: "#/components/schemas/Attendee"
    Events:
        title: Events
        type: array
        items:
          $ref: "#/components/schemas/Event"
security:
tags:
externalDocs: